//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWindows_WCF_CheckSalud.ProxyMedico {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicoDC", Namespace="http://schemas.datacontract.org/2004/07/WCF_CheckSalud")]
    [System.SerializableAttribute()]
    public partial class MedicoDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Fec_RegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Fech_Ult_ModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Id_UbigeoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Login_UsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Usu_RegistroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Usu_Ult_ModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apeMedicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apellNomMedicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codEspecialidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codMedicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string direcMedicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dniMedicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailMedicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short estadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fec_ingresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaNacimientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fotoMedicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nomMedicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string numColegiaturaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fec_Reg {
            get {
                return this.Fec_RegField;
            }
            set {
                if ((this.Fec_RegField.Equals(value) != true)) {
                    this.Fec_RegField = value;
                    this.RaisePropertyChanged("Fec_Reg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fech_Ult_Mod {
            get {
                return this.Fech_Ult_ModField;
            }
            set {
                if ((this.Fech_Ult_ModField.Equals(value) != true)) {
                    this.Fech_Ult_ModField = value;
                    this.RaisePropertyChanged("Fech_Ult_Mod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id_Ubigeo {
            get {
                return this.Id_UbigeoField;
            }
            set {
                if ((object.ReferenceEquals(this.Id_UbigeoField, value) != true)) {
                    this.Id_UbigeoField = value;
                    this.RaisePropertyChanged("Id_Ubigeo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login_Usuario {
            get {
                return this.Login_UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.Login_UsuarioField, value) != true)) {
                    this.Login_UsuarioField = value;
                    this.RaisePropertyChanged("Login_Usuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usu_Registro {
            get {
                return this.Usu_RegistroField;
            }
            set {
                if ((object.ReferenceEquals(this.Usu_RegistroField, value) != true)) {
                    this.Usu_RegistroField = value;
                    this.RaisePropertyChanged("Usu_Registro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usu_Ult_Mod {
            get {
                return this.Usu_Ult_ModField;
            }
            set {
                if ((object.ReferenceEquals(this.Usu_Ult_ModField, value) != true)) {
                    this.Usu_Ult_ModField = value;
                    this.RaisePropertyChanged("Usu_Ult_Mod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apeMedico {
            get {
                return this.apeMedicoField;
            }
            set {
                if ((object.ReferenceEquals(this.apeMedicoField, value) != true)) {
                    this.apeMedicoField = value;
                    this.RaisePropertyChanged("apeMedico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apellNomMedico {
            get {
                return this.apellNomMedicoField;
            }
            set {
                if ((object.ReferenceEquals(this.apellNomMedicoField, value) != true)) {
                    this.apellNomMedicoField = value;
                    this.RaisePropertyChanged("apellNomMedico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codEspecialidad {
            get {
                return this.codEspecialidadField;
            }
            set {
                if ((object.ReferenceEquals(this.codEspecialidadField, value) != true)) {
                    this.codEspecialidadField = value;
                    this.RaisePropertyChanged("codEspecialidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codMedico {
            get {
                return this.codMedicoField;
            }
            set {
                if ((object.ReferenceEquals(this.codMedicoField, value) != true)) {
                    this.codMedicoField = value;
                    this.RaisePropertyChanged("codMedico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string direcMedico {
            get {
                return this.direcMedicoField;
            }
            set {
                if ((object.ReferenceEquals(this.direcMedicoField, value) != true)) {
                    this.direcMedicoField = value;
                    this.RaisePropertyChanged("direcMedico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dniMedic {
            get {
                return this.dniMedicField;
            }
            set {
                if ((object.ReferenceEquals(this.dniMedicField, value) != true)) {
                    this.dniMedicField = value;
                    this.RaisePropertyChanged("dniMedic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailMedico {
            get {
                return this.emailMedicoField;
            }
            set {
                if ((object.ReferenceEquals(this.emailMedicoField, value) != true)) {
                    this.emailMedicoField = value;
                    this.RaisePropertyChanged("emailMedico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short estado {
            get {
                return this.estadoField;
            }
            set {
                if ((this.estadoField.Equals(value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fec_ingreso {
            get {
                return this.fec_ingresoField;
            }
            set {
                if ((this.fec_ingresoField.Equals(value) != true)) {
                    this.fec_ingresoField = value;
                    this.RaisePropertyChanged("fec_ingreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fechaNacimiento {
            get {
                return this.fechaNacimientoField;
            }
            set {
                if ((this.fechaNacimientoField.Equals(value) != true)) {
                    this.fechaNacimientoField = value;
                    this.RaisePropertyChanged("fechaNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fotoMedico {
            get {
                return this.fotoMedicoField;
            }
            set {
                if ((object.ReferenceEquals(this.fotoMedicoField, value) != true)) {
                    this.fotoMedicoField = value;
                    this.RaisePropertyChanged("fotoMedico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nomMedico {
            get {
                return this.nomMedicoField;
            }
            set {
                if ((object.ReferenceEquals(this.nomMedicoField, value) != true)) {
                    this.nomMedicoField = value;
                    this.RaisePropertyChanged("nomMedico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string numColegiatura {
            get {
                return this.numColegiaturaField;
            }
            set {
                if ((object.ReferenceEquals(this.numColegiaturaField, value) != true)) {
                    this.numColegiaturaField = value;
                    this.RaisePropertyChanged("numColegiatura");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyMedico.IServicioMedico")]
    public interface IServicioMedico {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/ConsultarMedico", ReplyAction="http://tempuri.org/IServicioMedico/ConsultarMedicoResponse")]
        TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC ConsultarMedico(string strCodigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/ConsultarMedico", ReplyAction="http://tempuri.org/IServicioMedico/ConsultarMedicoResponse")]
        System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC> ConsultarMedicoAsync(string strCodigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/ListarMedicos", ReplyAction="http://tempuri.org/IServicioMedico/ListarMedicosResponse")]
        TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC[] ListarMedicos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/ListarMedicos", ReplyAction="http://tempuri.org/IServicioMedico/ListarMedicosResponse")]
        System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC[]> ListarMedicosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/InsertarMedico", ReplyAction="http://tempuri.org/IServicioMedico/InsertarMedicoResponse")]
        bool InsertarMedico(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/InsertarMedico", ReplyAction="http://tempuri.org/IServicioMedico/InsertarMedicoResponse")]
        System.Threading.Tasks.Task<bool> InsertarMedicoAsync(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/ActualizarMedico", ReplyAction="http://tempuri.org/IServicioMedico/ActualizarMedicoResponse")]
        bool ActualizarMedico(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/ActualizarMedico", ReplyAction="http://tempuri.org/IServicioMedico/ActualizarMedicoResponse")]
        System.Threading.Tasks.Task<bool> ActualizarMedicoAsync(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/EliminarMedico", ReplyAction="http://tempuri.org/IServicioMedico/EliminarMedicoResponse")]
        bool EliminarMedico(string strCodigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMedico/EliminarMedico", ReplyAction="http://tempuri.org/IServicioMedico/EliminarMedicoResponse")]
        System.Threading.Tasks.Task<bool> EliminarMedicoAsync(string strCodigo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioMedicoChannel : TestWindows_WCF_CheckSalud.ProxyMedico.IServicioMedico, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioMedicoClient : System.ServiceModel.ClientBase<TestWindows_WCF_CheckSalud.ProxyMedico.IServicioMedico>, TestWindows_WCF_CheckSalud.ProxyMedico.IServicioMedico {
        
        public ServicioMedicoClient() {
        }
        
        public ServicioMedicoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioMedicoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioMedicoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioMedicoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC ConsultarMedico(string strCodigo) {
            return base.Channel.ConsultarMedico(strCodigo);
        }
        
        public System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC> ConsultarMedicoAsync(string strCodigo) {
            return base.Channel.ConsultarMedicoAsync(strCodigo);
        }
        
        public TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC[] ListarMedicos() {
            return base.Channel.ListarMedicos();
        }
        
        public System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC[]> ListarMedicosAsync() {
            return base.Channel.ListarMedicosAsync();
        }
        
        public bool InsertarMedico(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico) {
            return base.Channel.InsertarMedico(medico);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarMedicoAsync(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico) {
            return base.Channel.InsertarMedicoAsync(medico);
        }
        
        public bool ActualizarMedico(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico) {
            return base.Channel.ActualizarMedico(medico);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarMedicoAsync(TestWindows_WCF_CheckSalud.ProxyMedico.MedicoDC medico) {
            return base.Channel.ActualizarMedicoAsync(medico);
        }
        
        public bool EliminarMedico(string strCodigo) {
            return base.Channel.EliminarMedico(strCodigo);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarMedicoAsync(string strCodigo) {
            return base.Channel.EliminarMedicoAsync(strCodigo);
        }
    }
}
