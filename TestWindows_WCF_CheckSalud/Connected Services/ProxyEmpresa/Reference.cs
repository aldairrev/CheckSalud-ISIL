//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWindows_WCF_CheckSalud.ProxyEmpresa {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpresaDC", Namespace="http://schemas.datacontract.org/2004/07/WCF_CheckSalud")]
    [System.SerializableAttribute()]
    public partial class EmpresaDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Id_UbigeoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codEmpresaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string direccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short estadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime fechaIngresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string razSocEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string repEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rucEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string telefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id_Ubigeo {
            get {
                return this.Id_UbigeoField;
            }
            set {
                if ((object.ReferenceEquals(this.Id_UbigeoField, value) != true)) {
                    this.Id_UbigeoField = value;
                    this.RaisePropertyChanged("Id_Ubigeo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codEmpresa {
            get {
                return this.codEmpresaField;
            }
            set {
                if ((object.ReferenceEquals(this.codEmpresaField, value) != true)) {
                    this.codEmpresaField = value;
                    this.RaisePropertyChanged("codEmpresa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string direccion {
            get {
                return this.direccionField;
            }
            set {
                if ((object.ReferenceEquals(this.direccionField, value) != true)) {
                    this.direccionField = value;
                    this.RaisePropertyChanged("direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short estado {
            get {
                return this.estadoField;
            }
            set {
                if ((this.estadoField.Equals(value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime fechaIngreso {
            get {
                return this.fechaIngresoField;
            }
            set {
                if ((this.fechaIngresoField.Equals(value) != true)) {
                    this.fechaIngresoField = value;
                    this.RaisePropertyChanged("fechaIngreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string razSocEmp {
            get {
                return this.razSocEmpField;
            }
            set {
                if ((object.ReferenceEquals(this.razSocEmpField, value) != true)) {
                    this.razSocEmpField = value;
                    this.RaisePropertyChanged("razSocEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string repEmp {
            get {
                return this.repEmpField;
            }
            set {
                if ((object.ReferenceEquals(this.repEmpField, value) != true)) {
                    this.repEmpField = value;
                    this.RaisePropertyChanged("repEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rucEmp {
            get {
                return this.rucEmpField;
            }
            set {
                if ((object.ReferenceEquals(this.rucEmpField, value) != true)) {
                    this.rucEmpField = value;
                    this.RaisePropertyChanged("rucEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string telefono {
            get {
                return this.telefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.telefonoField, value) != true)) {
                    this.telefonoField = value;
                    this.RaisePropertyChanged("telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyEmpresa.IServicioEmpresa")]
    public interface IServicioEmpresa {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Consultar", ReplyAction="http://tempuri.org/IServicioEmpresa/ConsultarResponse")]
        TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC Consultar(string strCodigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Consultar", ReplyAction="http://tempuri.org/IServicioEmpresa/ConsultarResponse")]
        System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC> ConsultarAsync(string strCodigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Listar", ReplyAction="http://tempuri.org/IServicioEmpresa/ListarResponse")]
        TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC[] Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Listar", ReplyAction="http://tempuri.org/IServicioEmpresa/ListarResponse")]
        System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC[]> ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Insertar", ReplyAction="http://tempuri.org/IServicioEmpresa/InsertarResponse")]
        bool Insertar(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Insertar", ReplyAction="http://tempuri.org/IServicioEmpresa/InsertarResponse")]
        System.Threading.Tasks.Task<bool> InsertarAsync(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Actualizar", ReplyAction="http://tempuri.org/IServicioEmpresa/ActualizarResponse")]
        bool Actualizar(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Actualizar", ReplyAction="http://tempuri.org/IServicioEmpresa/ActualizarResponse")]
        System.Threading.Tasks.Task<bool> ActualizarAsync(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Eliminar", ReplyAction="http://tempuri.org/IServicioEmpresa/EliminarResponse")]
        bool Eliminar(string strCodigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioEmpresa/Eliminar", ReplyAction="http://tempuri.org/IServicioEmpresa/EliminarResponse")]
        System.Threading.Tasks.Task<bool> EliminarAsync(string strCodigo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioEmpresaChannel : TestWindows_WCF_CheckSalud.ProxyEmpresa.IServicioEmpresa, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioEmpresaClient : System.ServiceModel.ClientBase<TestWindows_WCF_CheckSalud.ProxyEmpresa.IServicioEmpresa>, TestWindows_WCF_CheckSalud.ProxyEmpresa.IServicioEmpresa {
        
        public ServicioEmpresaClient() {
        }
        
        public ServicioEmpresaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioEmpresaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioEmpresaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioEmpresaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC Consultar(string strCodigo) {
            return base.Channel.Consultar(strCodigo);
        }
        
        public System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC> ConsultarAsync(string strCodigo) {
            return base.Channel.ConsultarAsync(strCodigo);
        }
        
        public TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC[] Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC[]> ListarAsync() {
            return base.Channel.ListarAsync();
        }
        
        public bool Insertar(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa) {
            return base.Channel.Insertar(empresa);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarAsync(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa) {
            return base.Channel.InsertarAsync(empresa);
        }
        
        public bool Actualizar(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa) {
            return base.Channel.Actualizar(empresa);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarAsync(TestWindows_WCF_CheckSalud.ProxyEmpresa.EmpresaDC empresa) {
            return base.Channel.ActualizarAsync(empresa);
        }
        
        public bool Eliminar(string strCodigo) {
            return base.Channel.Eliminar(strCodigo);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarAsync(string strCodigo) {
            return base.Channel.EliminarAsync(strCodigo);
        }
    }
}
